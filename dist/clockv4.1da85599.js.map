{"version":3,"sources":["js/clockv4.js"],"names":["countdown","endTime","now","Date","timePeriodMapping","startTime","periodName","currentPeriodIndex","getCurrentPeriodIndex","i","length","_timePeriodMapping$i$2","_slicedToArray","split","map","Number","endHours","endMinutes","potentialEndTime","setHours","to12HourFormat","timeStr","_timeStr$split$map2","hours","minutes","concat","initializeCountdown","document","getElementById","updatePeriod","tick","currentPeriodMapping","_currentPeriodMapping2","textContent","_currentPeriodMapping4","startHours","startMinutes","periodStartTime","updateProgressBar","periodEndTime","progressPercentage","style","width","updateClock","timeRemaining","setDate","getDate","Math","floor","seconds","_currentPeriodMapping6","requestAnimationFrame","window","advanceToNextPeriod","console","log","advanceToPreviousPeriod","addEventListener"],"mappings":";AA+IgE,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,KAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,KAAA,IAAA,KAAA,IAAA,EAAA,CAAA,GAAA,OAAA,KAAA,EAAA,OAAA,GAAA,OAAA,OAAA,GAAA,EAAA,EAAA,KAAA,IAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,GAAA,MAAA,EAAA,SAAA,EAAA,EAAA,SAAA,OAAA,KAAA,GAAA,OAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAzIhE,IAAIA,EAEAC,EADAC,EAAM,IAAIC,KAGVC,EAAoB,CACpB,CAAEC,UAAW,QAASJ,QAAS,QAASK,WAAY,YACpD,CAAED,UAAW,QAASJ,QAAS,QAASK,WAAY,kBACpD,CAAED,UAAW,QAASJ,QAAS,QAASK,WAAY,YACpD,CAAED,UAAW,QAASJ,QAAS,QAASK,WAAY,kBACpD,CAAED,UAAW,QAASJ,QAAS,QAASK,WAAY,oBACpD,CAAED,UAAW,QAASJ,QAAS,QAASK,WAAY,kBACpD,CAAED,UAAW,QAASJ,QAAS,QAASK,WAAY,aAIpDC,EAAqBC,IAEzB,SAASA,IACL,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAkBM,OAAQD,IAAK,CAC/C,IAAgFE,EAAAC,EAAnDR,EAAkBK,GAAGR,QAAQY,MAAM,KAAKC,IAAIC,QAAO,GAA3EC,EAAQL,EAAA,GAAEM,EAAUN,EAAA,GACrBO,EAAmB,IAAIf,KAAKD,GAGhC,GAFAgB,EAAiBC,SAASH,EAAUC,EAAY,EAAG,GAE/Cf,EAAMgB,EACN,OAAOT,EAGf,OAAO,EAGX,SAASW,EAAeC,GACpB,IAAqDC,EAAAV,EAA9BS,EAAQR,MAAM,KAAKC,IAAIC,QAAO,GAAhDQ,EAAKD,EAAA,GAAEE,EAAOF,EAAA,GAGnB,OADAE,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzCC,GAAAA,OAFAF,EAAQA,EAAQ,IAAM,GAEPE,KAAAA,OAAID,GAsBvB,SAASE,IACL1B,EAAY2B,SAASC,eAAe,oBACpC1B,EAAM,IAAIC,KACV0B,IACAC,IAGJ,SAASD,IACL,IAAIE,EAAuB3B,EAAkBG,GAE7C,GAAIwB,EAAsB,CACtB,IAAgFC,EAAApB,EAAnDmB,EAAqB9B,QAAQY,MAAM,KAAKC,IAAIC,QAAO,GAA3EC,EAAQgB,EAAA,GAAEf,EAAUe,EAAA,IACzB/B,EAAU,IAAIE,KAAKD,IACXiB,SAASH,EAAUC,EAAY,EAAG,GAE1CU,SAASC,eAAe,kBAAkBK,YAAcF,EAAqBzB,WAC7EqB,SAASC,eAAe,gBAAgBK,YAAWR,GAAAA,OAAML,EAAeW,EAAqB1B,WAAUoB,OAAAA,OAAML,EAAeW,EAAqB9B,UAEjJ,IAAsFiC,EAAAtB,EAArDmB,EAAqB1B,UAAUQ,MAAM,KAAKC,IAAIC,QAAO,GAAjFoB,EAAUD,EAAA,GAAEE,EAAYF,EAAA,GACzBG,EAAkB,IAAIlC,KAAKD,GAC/BmC,EAAgBlB,SAASgB,EAAYC,EAAc,EAAG,GAEtDE,EAAkBD,EAAiBpC,QAEnCA,EAAU,IAAIE,KAAKD,GACnByB,SAASC,eAAe,kBAAkBK,YAAc,mBACxDN,SAASC,eAAe,gBAAgBK,YAAc,GAI9D,SAASK,EAAkBD,EAAiBE,GACxC,IAIMC,GAHkBtC,EAAMmC,IADRE,EAAgBF,GAIyB,IAG/DV,SAASC,eAAe,uBAAuBa,MAAMC,MAAKjB,GAAAA,OAAMe,EAAqB,KAMzF,SAASG,IACLzC,EAAM,IAAIC,KACV,IAAIyC,GAAiB3C,EAAUC,GAAO,IAGlC0C,GAAiB,IAEjB3C,EAAQ4C,QAAQ5C,EAAQ6C,UAAY,GACpCF,GAAiB3C,EAAUC,GAAO,KAItC,IAAIqB,EAAQwB,KAAKC,MAAMJ,EAAgB,MACvCA,GAAiB,KACjB,IAAIpB,EAAUuB,KAAKC,MAAMJ,EAAgB,IACrCK,EAAUF,KAAKC,MAAMJ,EAAgB,IAGzC5C,EAAUiC,YAAWR,GAAAA,OAAMF,EAAKE,KAAAA,OAAID,EAAU,GAAK,IAAM,IAAEC,OAAGD,EAAOC,KAAAA,OAAIwB,EAAU,GAAK,IAAM,IAAExB,OAAGwB,GAGnG,IAAIlB,EAAuB3B,EAAkBG,GAC7C,GAAIwB,EAAsB,CACtB,IAAsFmB,EAAAtC,EAArDmB,EAAqB1B,UAAUQ,MAAM,KAAKC,IAAIC,QAAO,GAAjFoB,EAAUe,EAAA,GAAEd,EAAYc,EAAA,GACzBb,EAAkB,IAAIlC,KAAKD,GAC/BmC,EAAgBlB,SAASgB,EAAYC,EAAc,EAAG,GACtDE,EAAkBD,EAAiBpC,IAM3C,SAAS6B,IACLa,IACAQ,sBAAsBrB,GAjG1BsB,OAAOC,oBAAsB,WACzBC,QAAQC,IAAI,KACRhD,EAAqBH,EAAkBM,OAAS,IAChDH,IACAsB,MAIRuB,OAAOI,wBAA0B,WACzBjD,EAAqB,IACrBA,IACAsB,MAyFRuB,OAAOK,iBAAiB,mBAAoB/B","file":"clockv4.1da85599.js","sourceRoot":"..","sourcesContent":["/**\r\n * @fileoverview This file updates the current time as a simple countdown.\r\n * @version August 25, 2023\r\n * @authors Maxime Hendryx-Parkerp\r\n **/\r\n\r\nvar countdown;\r\nvar now = new Date();\r\nvar endTime;\r\n\r\nvar timePeriodMapping = [\r\n    { startTime: \"08:30\", endTime: \"09:53\", periodName: \"Period 1\" },\r\n    { startTime: \"09:53\", endTime: \"10:01\", periodName: \"Passing Period\" },\r\n    { startTime: \"10:01\", endTime: \"11:24\", periodName: \"Period 2\" },\r\n    { startTime: \"11:24\", endTime: \"11:32\", periodName: \"Passing Period\" },\r\n    { startTime: \"11:32\", endTime: \"13:24\", periodName: \"Period 3 & Lunch\" },\r\n    { startTime: \"13:24\", endTime: \"13:32\", periodName: \"Passing Period\" },\r\n    { startTime: \"13:32\", endTime: \"15:00\", periodName: \"Period 4\" }\r\n];\r\n\r\n// At the top of the file\r\nlet currentPeriodIndex = getCurrentPeriodIndex();\r\n\r\nfunction getCurrentPeriodIndex() {\r\n    for (let i = 0; i < timePeriodMapping.length; i++) {\r\n        let [endHours, endMinutes] = timePeriodMapping[i].endTime.split(\":\").map(Number);\r\n        let potentialEndTime = new Date(now);\r\n        potentialEndTime.setHours(endHours, endMinutes, 0, 0);\r\n\r\n        if (now < potentialEndTime) {\r\n            return i;\r\n        }\r\n    }\r\n    return 0; // Default to the first period if no matching period found\r\n}\r\n\r\nfunction to12HourFormat(timeStr) {\r\n    let [hours, minutes] = timeStr.split(\":\").map(Number);\r\n    hours = hours % 12 || 12; // Convert 0 hours to 12 for 12 AM\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    return `${hours}:${minutes}`;\r\n}\r\n\r\nwindow.advanceToNextPeriod = function() {\r\n    console.log(\"e\")\r\n    if (currentPeriodIndex < timePeriodMapping.length - 1) {\r\n        currentPeriodIndex++;\r\n        updatePeriod();\r\n    }\r\n}\r\n\r\nwindow.advanceToPreviousPeriod = function() {\r\n    if (currentPeriodIndex > 0) {\r\n        currentPeriodIndex--;\r\n        updatePeriod();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Initialize the countdown variables and start the tick function.\r\n */\r\nfunction initializeCountdown() {\r\n    countdown = document.getElementById(\"countdown__timer\");\r\n    now = new Date();\r\n    updatePeriod();\r\n    tick();\r\n}\r\n\r\nfunction updatePeriod() {\r\n    let currentPeriodMapping = timePeriodMapping[currentPeriodIndex];\r\n\r\n    if (currentPeriodMapping) {\r\n        let [endHours, endMinutes] = currentPeriodMapping.endTime.split(\":\").map(Number);\r\n        endTime = new Date(now);\r\n        endTime.setHours(endHours, endMinutes, 0, 0);\r\n\r\n        document.getElementById(\"period__header\").textContent = currentPeriodMapping.periodName;\r\n        document.getElementById(\"period__time\").textContent = `${to12HourFormat(currentPeriodMapping.startTime)} - ${to12HourFormat(currentPeriodMapping.endTime)}`;\r\n\r\n        let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n        let periodStartTime = new Date(now);\r\n        periodStartTime.setHours(startHours, startMinutes, 0, 0);\r\n\r\n        updateProgressBar(periodStartTime, endTime);\r\n    } else {\r\n        endTime = new Date(now);\r\n        document.getElementById(\"period__header\").textContent = \"Not School Hours\";\r\n        document.getElementById(\"period__time\").textContent = \"\";\r\n    }\r\n}\r\n\r\nfunction updateProgressBar(periodStartTime, periodEndTime) {\r\n    const totalDuration = periodEndTime - periodStartTime;\r\n    const elapsedDuration = now - periodStartTime;\r\n\r\n    // Calculate the percentage of time elapsed\r\n    const progressPercentage = (elapsedDuration / totalDuration) * 100;\r\n\r\n    // Set the width of the progress bar\r\n    document.getElementById(\"countdown__progress\").style.width = `${progressPercentage}%`;\r\n}\r\n\r\n/**\r\n * updates the current time and countdown timer\r\n */\r\nfunction updateClock() {\r\n    now = new Date();\r\n    let timeRemaining = (endTime - now) / 1000; // in seconds\r\n\r\n    // If the countdown has expired, update the period\r\n    if (timeRemaining <= 0) {\r\n        // Adjust endTime to the next day's end time\r\n        endTime.setDate(endTime.getDate() + 1);\r\n        timeRemaining = (endTime - now) / 1000;\r\n    }\r\n\r\n    // Calculate hours, minutes, seconds\r\n    let hours = Math.floor(timeRemaining / 3600);\r\n    timeRemaining %= 3600;\r\n    let minutes = Math.floor(timeRemaining / 60);\r\n    let seconds = Math.floor(timeRemaining % 60);\r\n\r\n    // Display time\r\n    countdown.textContent = `${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n\r\n    // Update the progress bar\r\n    let currentPeriodMapping = timePeriodMapping[currentPeriodIndex];\r\n    if (currentPeriodMapping) {\r\n        let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n        let periodStartTime = new Date(now);\r\n        periodStartTime.setHours(startHours, startMinutes, 0, 0);\r\n        updateProgressBar(periodStartTime, endTime);\r\n    }\r\n}\r\n\r\n\r\n// main loop\r\nfunction tick() {\r\n    updateClock();\r\n    requestAnimationFrame(tick);\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", initializeCountdown);\r\n"]}