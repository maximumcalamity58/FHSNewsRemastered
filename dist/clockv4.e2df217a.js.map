{"version":3,"sources":["js/clockv4.js"],"names":["countdown","now","Date","endTime","hasAdvanced","manualNavigation","timePeriodMapping","startTime","periodName","lunchTimings","currentPeriodIndex","getCurrentPeriodIndex","i","length","_timePeriodMapping$i$","split","map","Number","_timePeriodMapping$i$2","_slicedToArray","endHours","endMinutes","potentialEndTime","setHours","to12HourFormat","timeStr","_timeStr$split$map","_timeStr$split$map2","hours","minutes","ampm","concat","window","advanceToNextPeriod","updatePeriod","advanceToPreviousPeriod","initializeCountdown","document","getElementById","isSchoolHours","tick","_Date","_Date2","firstStartTime","apply","_toConsumableArray","lastEndTime","slice","selectedLunchType","currentPeriodMapping","realCurrentPeriodIndex","_currentPeriodMapping","_currentPeriodMapping2","lunchStartHours","lunchStartMinutes","lunchStartTime","_currentPeriodMapping3","_currentPeriodMapping4","lunchEndHours","lunchEndMinutes","_currentPeriodMapping5","_currentPeriodMapping6","_currentPeriodMapping7","_currentPeriodMapping8","startHours","startMinutes","textContent","_currentPeriodMapping9","_currentPeriodMapping10","periodStartTime","lunchButtons","classList","remove","add","console","log","updateProgressBar","setDate","getDate","gallery","innerHTML","dot","createElement","className","appendChild","periodEndTime","totalDuration","elapsedDuration","progressPercentage","style","width","updateProgressBarOutside","chooseLunch","lunchType","buttonElement","allLunchButtons","querySelectorAll","contains","forEach","btn","updateClock","timeRemaining","_timePeriodMapping$0$","_timePeriodMapping$0$2","firstStartHours","firstStartMinutes","Math","floor","seconds","_currentPeriodMapping11","_currentPeriodMapping12","requestAnimationFrame","addEventListener"],"mappings":"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","file":"clockv4.e2df217a.js","sourceRoot":"..","sourcesContent":["/**\r\n * @fileoverview This file updates the current time as a simple countdown.\r\n * @version August 25, 2023\r\n * @authors Maxime Hendryx-Parker\r\n **/\r\n\r\nvar countdown;\r\nvar now = new Date();\r\nvar endTime;\r\nlet hasAdvanced = false;  // Add this flag at the top of the file to track whether we have already advanced the period\r\nlet manualNavigation = false; // Flag to indicate manual navigation\r\n\r\nvar timePeriodMapping = [\r\n    { startTime: \"08:00\", endTime: \"08:30\", periodName: \"Passing Period\" },\r\n    { startTime: \"08:30\", endTime: \"09:53\", periodName: \"Period 1\" },\r\n    { startTime: \"09:53\", endTime: \"10:01\", periodName: \"Passing Period\" },\r\n    { startTime: \"10:01\", endTime: \"11:24\", periodName: \"Period 2\" },\r\n    { startTime: \"11:24\", endTime: \"13:24\", periodName: \"Period 3 & Lunch\" },\r\n    { startTime: \"13:24\", endTime: \"13:32\", periodName: \"Passing Period\" },\r\n    { startTime: \"13:32\", endTime: \"15:00\", periodName: \"Period 4\" },\r\n];\r\n\r\nvar lunchTimings = {\r\n    \"A\": { startTime: \"11:24\", endTime: \"11:54\", periodName: \"A Lunch\" },\r\n    \"B\": { startTime: \"11:54\", endTime: \"12:24\", periodName: \"B Lunch\" },\r\n    \"C\": { startTime: \"12:24\", endTime: \"12:54\", periodName: \"C Lunch\" },\r\n    \"D\": { startTime: \"12:54\", endTime: \"13:24\", periodName: \"D Lunch\" },\r\n};\r\n\r\n\r\n// At the top of the file\r\nlet currentPeriodIndex = getCurrentPeriodIndex();\r\n\r\nfunction getCurrentPeriodIndex() {\r\n    for (let i = 0; i < timePeriodMapping.length; i++) {\r\n        let [endHours, endMinutes] = timePeriodMapping[i].endTime.split(\":\").map(Number);\r\n        let potentialEndTime = new Date(now);\r\n        potentialEndTime.setHours(endHours, endMinutes, 0, 0);\r\n\r\n        if (now < potentialEndTime) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1; // Return 0 if outside of all periods\r\n}\r\n\r\nfunction to12HourFormat(timeStr) {\r\n    let [hours, minutes] = timeStr.split(\":\").map(Number);\r\n    let ampm;\r\n    if (hours / 12 > 1) {\r\n        ampm = \"PM\"\r\n    } else {\r\n        ampm = \"AM\"\r\n    }\r\n    hours = hours % 12 || 12; // Convert 0 hours to 12 for 12 AM\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    return `${hours}:${minutes} ${ampm}`;\r\n}\r\n\r\nwindow.advanceToNextPeriod = function() {\r\n    manualNavigation = true;\r\n    if (currentPeriodIndex < timePeriodMapping.length - 1) {\r\n        currentPeriodIndex++;\r\n        updatePeriod();\r\n    } else if (currentPeriodIndex === timePeriodMapping.length - 1) {\r\n        currentPeriodIndex = -1;\r\n        updatePeriod();\r\n    }\r\n}\r\n\r\nwindow.advanceToPreviousPeriod = function() {\r\n    manualNavigation = true;\r\n    if (currentPeriodIndex > -1) {\r\n        currentPeriodIndex--;\r\n        updatePeriod();\r\n    } else if (currentPeriodIndex === -1) {\r\n        currentPeriodIndex = timePeriodMapping.length-1;\r\n        updatePeriod()\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Initialize the countdown variables and start the tick function.\r\n */\r\nfunction initializeCountdown() {\r\n    countdown = document.getElementById(\"countdown__timer\");\r\n    now = new Date();\r\n\r\n    if (!isSchoolHours() || getCurrentPeriodIndex() === -1) {\r\n        manualNavigation = true\r\n    }\r\n\r\n    updatePeriod();\r\n    tick();\r\n}\r\n\r\nfunction isSchoolHours() {\r\n    let firstStartTime = new Date().setHours(...timePeriodMapping[0].startTime.split(\":\"));\r\n    let lastEndTime = new Date().setHours(...timePeriodMapping.slice(-1)[0].endTime.split(\":\"));\r\n    return (new Date() >= firstStartTime && new Date() <= lastEndTime);\r\n}\r\n\r\nlet selectedLunchType = null; // This will store the type of lunch selected, if any\r\n\r\nfunction updatePeriod() {\r\n    let currentPeriodMapping = timePeriodMapping[currentPeriodIndex];\r\n\r\n    let realCurrentPeriodIndex = getCurrentPeriodIndex();\r\n\r\n    if (currentPeriodMapping) {\r\n        // If current period is \"Period 3 & Lunch\"\r\n        if (currentPeriodMapping.periodName === \"Period 3 & Lunch\" && selectedLunchType) {\r\n            currentPeriodMapping = lunchTimings[selectedLunchType];\r\n\r\n            let [lunchStartHours, lunchStartMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n            let lunchStartTime = new Date(now);\r\n            lunchStartTime.setHours(lunchStartHours, lunchStartMinutes, 0, 0);\r\n\r\n            if (now < lunchStartTime) {\r\n                // If the selected lunch has not started, set endTime to its startTime\r\n                endTime = lunchStartTime;\r\n            } else {\r\n                // If the selected lunch has started, set endTime to its actual endTime\r\n                let [lunchEndHours, lunchEndMinutes] = currentPeriodMapping.endTime.split(\":\").map(Number);\r\n                endTime = new Date(now);\r\n                endTime.setHours(lunchEndHours, lunchEndMinutes, 0, 0);\r\n            }\r\n        } else {\r\n            let [endHours, endMinutes] = currentPeriodMapping.endTime.split(\":\").map(Number);\r\n            let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n\r\n            if (realCurrentPeriodIndex !== currentPeriodIndex) {\r\n                // If the period being looked at is not the current period, set endTime to startTime\r\n                endTime = new Date(now);\r\n                endTime.setHours(startHours, startMinutes, 0, 0);\r\n            } else {\r\n                // Otherwise, set endTime to the actual end time of the period\r\n                endTime = new Date(now);\r\n                endTime.setHours(endHours, endMinutes, 0, 0);\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"period__header\").textContent = currentPeriodMapping.periodName;\r\n        document.getElementById(\"period__time\").textContent = `${to12HourFormat(currentPeriodMapping.startTime)} - ${to12HourFormat(currentPeriodMapping.endTime)}`;\r\n\r\n        let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n        let periodStartTime = new Date(now);\r\n        periodStartTime.setHours(startHours, startMinutes, 0, 0);\r\n\r\n        let lunchButtons = document.getElementById(\"lunch\");\r\n        if (currentPeriodMapping.periodName === \"Period 3 & Lunch\" || currentPeriodMapping === lunchTimings[selectedLunchType]) {\r\n            lunchButtons.classList.remove(\"hidden\");\r\n        } else {\r\n            lunchButtons.classList.add(\"hidden\");\r\n        }\r\n\r\n        console.log(currentPeriodMapping.periodName);\r\n\r\n        updateProgressBar(periodStartTime, endTime);\r\n    } else {\r\n        endTime = new Date(now);\r\n        document.getElementById(\"period__header\").textContent = \"Not School Hours\";\r\n        document.getElementById(\"period__time\").textContent = to12HourFormat(timePeriodMapping[timePeriodMapping.length-1].endTime) + \" - \" + to12HourFormat(timePeriodMapping[0].startTime);\r\n    }\r\n\r\n    if (manualNavigation) {\r\n        if (now > endTime) {\r\n            endTime.setDate(endTime.getDate() + 1);\r\n        }\r\n        manualNavigation = false; // Reset the flag\r\n    }\r\n\r\n    console.log(\"sup\")\r\n\r\n    // Update gallery dots\r\n    let gallery = document.getElementById(\"period__gallery\");\r\n    gallery.innerHTML = \"\"; // Clear existing dots\r\n\r\n    for (let i = 0; i < timePeriodMapping.length; i++) {\r\n        let dot = document.createElement(\"div\");\r\n        dot.className = \"gallery-dot\";\r\n\r\n        // Mark the active dot based on the current period\r\n        if (i === currentPeriodIndex) {\r\n            dot.classList.add(\"active\");\r\n        }\r\n\r\n        gallery.appendChild(dot);\r\n    }\r\n}\r\n\r\nfunction updateProgressBar(periodStartTime, periodEndTime) {\r\n    const totalDuration = periodEndTime - periodStartTime;\r\n    const elapsedDuration = now - periodStartTime;\r\n\r\n    // Calculate the percentage of time elapsed\r\n    const progressPercentage = (elapsedDuration / totalDuration) * 100;\r\n\r\n    // Set the width of the progress bar\r\n    document.getElementById(\"countdown__progress\").style.width = `${progressPercentage}%`;\r\n}\r\n\r\nfunction updateProgressBarOutside() {\r\n    let periodStartTime = timePeriodMapping[timePeriodMapping.length-1].endTime;\r\n    let periodEndTime = timePeriodMapping[0].startTime;\r\n\r\n    const totalDuration = periodEndTime - periodStartTime;\r\n    const elapsedDuration = now - periodStartTime;\r\n\r\n    // Calculate the percentage of time elapsed\r\n    const progressPercentage = (elapsedDuration / totalDuration) * 100;\r\n\r\n    // Set the width of the progress bar\r\n    document.getElementById(\"countdown__progress\").style.width = `${progressPercentage}%`;\r\n}\r\n\r\nwindow.chooseLunch = function(lunchType, buttonElement) {\r\n    // Get all lunch buttons\r\n    let allLunchButtons = document.querySelectorAll(\"#lunch__choose .container\");\r\n\r\n    // If the button clicked is already selected\r\n    if (buttonElement.classList.contains(\"selected\")) {\r\n        // Deselect the button\r\n        buttonElement.classList.remove(\"selected\");\r\n        // Reset the selected lunch type\r\n        selectedLunchType = null;\r\n    } else {\r\n        // If another button was previously selected, deselect it\r\n        allLunchButtons.forEach(btn => btn.classList.remove(\"selected\"));\r\n\r\n        // Mark the clicked button as selected\r\n        buttonElement.classList.add(\"selected\");\r\n        // Set the selected lunch type\r\n        selectedLunchType = lunchType;\r\n    }\r\n\r\n    // Update the period to reflect the changes\r\n    manualNavigation = true;\r\n    updatePeriod();\r\n}\r\n\r\n\r\n\r\n/**\r\n * updates the current time and countdown timer\r\n */\r\nfunction updateClock() {\r\n    now = new Date();\r\n    let timeRemaining;\r\n\r\n    // If it's not school hours\r\n    if (currentPeriodIndex === -1) {\r\n        let [firstStartHours, firstStartMinutes] = timePeriodMapping[0].startTime.split(\":\").map(Number);\r\n        let firstStartTime = new Date(now);\r\n        firstStartTime.setHours(firstStartHours, firstStartMinutes, 0, 0);\r\n\r\n        // If the time has passed for today, set for next day\r\n        if (now > firstStartTime) {\r\n            firstStartTime.setDate(firstStartTime.getDate() + 1);\r\n        }\r\n\r\n        timeRemaining = ((firstStartTime - now) + 2000) / 1000; // in seconds\r\n    }\r\n    // Otherwise, it's a regular school period or passing period\r\n    else {\r\n        timeRemaining = ((endTime - now) + 2000) / 1000; // in seconds\r\n    }\r\n\r\n    // Reset hasAdvanced flag if the time is not yet expired\r\n    if (timeRemaining > 0) {\r\n        hasAdvanced = false;\r\n    }\r\n\r\n    if (timeRemaining <= 0 && !hasAdvanced && !manualNavigation) {\r\n        // ... (existing logic to advance the period)\r\n        currentPeriodIndex = getCurrentPeriodIndex();\r\n        updatePeriod();\r\n        hasAdvanced = true;\r\n    }\r\n\r\n    // If the time has already expired and it's a manual navigation\r\n    if (timeRemaining <= 0 && manualNavigation) {\r\n        endTime.setDate(endTime.getDate() + 1);\r\n        timeRemaining = ((endTime - now) + 2000) / 1000;\r\n        manualNavigation = false; // Reset the flag\r\n    }\r\n\r\n    if (timeRemaining < 0) {\r\n        timeRemaining = ((endTime - now) + 2000) / 1000\r\n    }\r\n\r\n    // Calculate hours, minutes, seconds\r\n    let hours = Math.floor(timeRemaining / 3600);\r\n    timeRemaining %= 3600;\r\n    let minutes = Math.floor(timeRemaining / 60);\r\n    let seconds = Math.floor(timeRemaining % 60);\r\n\r\n    // Display time\r\n    if (hours > 0) {\r\n        countdown.textContent = `${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    } else {\r\n        countdown.textContent = `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    }\r\n\r\n    // Update the progress bar\r\n    let currentPeriodMapping = timePeriodMapping[currentPeriodIndex];\r\n    if (currentPeriodMapping) {\r\n        let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n        let periodStartTime = new Date(now);\r\n        periodStartTime.setHours(startHours, startMinutes, 0, 0);\r\n        updateProgressBar(periodStartTime, endTime);\r\n    }\r\n}\r\n\r\n\r\n// main loop\r\nfunction tick() {\r\n    updateClock();\r\n    requestAnimationFrame(tick);\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", initializeCountdown);\r\n"]}