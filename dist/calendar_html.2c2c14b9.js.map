{"version":3,"sources":["js/calendar_html.js"],"names":["createScheduleHead","ID","arguments","length","undefined","headingElements","createElement","JSON_sched","metadata","name","createScheduleMain","period","startTimeDigits","endTimeDigits","createPeriodHeading","createPeriodTime","to12HTime","createScheduleLabelBlock","subParts","block","_iterator","_createForOfIteratorHelper","_step","s","n","done","part","value","appendChild","err","e","f","fillSchedule","head","scheduleSection","children","body","container","_iterator2","_step2","item","i","periods","intraschedule","_iterator3","Object","getOwnPropertyNames","_step3","key","clearSchedule","firstChild","removeChild","displaySchedule","classList","setMonthSchedules","containers","days","calendar","getFullMonth","sched","_loop","dayParagraphElm","Math","floor","JSON_calendar","year","month","day","innerHTML","style","getBackground","color","currentMonth","userData","active","previous","onclick","setCurrentMonthDisplay","calendarSection","textContent","MONTH_NAMES","currentYear","inMonth","time","split","digit","parseInt","padDigit","join","number","concat"],"mappings":"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","file":"calendar_html.2c2c14b9.js","sourceRoot":"..","sourcesContent":["/**\r\n * Creates a schedule heading\r\n * @param {string} ID - name of the schedule\r\n * @returns HTML elements to display for the heading\r\n */\r\nfunction createScheduleHead(ID = \"\"){\r\n  let headingElements = [\r\n    createElement(\"div\", [\"class\",\"schedule_container edit\"],\r\n    [\"children\",\r\n      [\r\n        createElement(\"div\",[\"class\",\"schedule_text_container\"],\r\n        [\"children\",\r\n          [\r\n            createElement(\"p\",[\"text\" , (ID === \"\")? \"Undefined\" : JSON_sched[ID].metadata.name])\r\n          ]\r\n        ])\r\n      ]\r\n    ])\r\n  ];\r\n  return headingElements;\r\n}\r\n/**\r\n * Create schedule HTML to display a single period name, times, and possible sub-entries\r\n * @param {Object} period object with name, start time, end time\r\n * @returns HTML element\r\n */\r\nfunction createScheduleMain(period = {name:\"\", startTimeDigits: \"\", endTimeDigits:\"\"}){\r\n  return createElement(\"div\",[\"class\",\"schedule_part\"],[\"children\",\r\n    [\r\n      createPeriodHeading(period.name),\r\n      createPeriodTime(period)\r\n    ]\r\n  ]);\r\n}\r\n/**\r\n * Creates period heading\r\n */\r\nfunction createPeriodHeading(name = \"\"){\r\n  return createElement(\"div\", [\"class\", \"period_heading\"], [\"children\",\r\n    [\r\n      createElement(\"p\",[\"text\",name])\r\n    ]\r\n  ])\r\n}\r\n/**\r\n * Creates period timing HTML display\r\n */\r\nfunction createPeriodTime(period = {startTimeDigits: \"\", endTimeDigits: \"\"}){\r\n  return createElement(\"div\", [\"class\", \"period_time\"], [\"children\",[\r\n  createElement(\"p\", [\"text\",  to12HTime(period.startTimeDigits)]),\r\n  createElement(\"p\", [\"text\", \"-\"] ),\r\n  createElement(\"p\", [\"text\",  to12HTime(period.endTimeDigits)])\r\n  ] ]\r\n  );\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction createScheduleLabelBlock(name = \"\", subParts = []){\r\n  let block = createElement(\"div\", [\"class\",\"label_block\"], [\"children\",\r\n  [createPeriodHeading(name, true, true)]\r\n  ]);\r\n  for(let part of subParts){\r\n    block.appendChild(createScheduleMain(part, false, true));\r\n  }\r\n\r\n  return block;\r\n}\r\n/**\r\n * Displays schedule passed in\r\n * @param {String} ID id of the schedule to display\r\n */\r\nfunction fillSchedule(ID){\r\n  let head = scheduleSection.children[0].children[0],\r\n  body = scheduleSection.children[0].children[1],\r\n  container;\r\n  for (let item of createScheduleHead(ID)) {\r\n    head.appendChild(item);\r\n  }\r\n  for(let i=0; i < JSON_sched[ID].periods.length; i++){\r\n    container = createElement(\"div\", [\"class\",\"part_container\"]);\r\n    container.appendChild(createScheduleMain(JSON_sched[ID].periods[i]));\r\n    if(JSON_sched[ID].periods[i].intraschedule != null){\r\n      for(let key of Object.getOwnPropertyNames(JSON_sched[ID].periods[i].intraschedule) ){\r\n          container.appendChild(createScheduleLabelBlock(key, JSON_sched[ID].periods[i].intraschedule[key]));\r\n      }\r\n    }\r\n\r\n    body.appendChild( container );\r\n  }\r\n}\r\n\r\n/**\r\n * clears currently displayed HTML\r\n */\r\nfunction clearSchedule(){\r\n    for(let i =0; i < 2; i++){\r\n        while(scheduleSection.children[0].children[i].firstChild){\r\n            scheduleSection.children[0].children[i].removeChild(scheduleSection.children[0].children[i].firstChild);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fills schedule editing section with the current schedule\r\n * @param {boolean} isNew whether a new or existing schedule\r\n */\r\nfunction displaySchedule(ID) {\r\n    clearSchedule();\r\n    fillSchedule(ID);\r\n    scheduleSection.classList = \"\";\r\n}\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Set schedule data on each calendar day for current month\r\n * containers - HTML elements containing days on calendar (stored in columns)\r\n * calendar - global calendar object\r\n * JSON_calendar - global variable representing JSON object to store in file\r\n */\r\nfunction setMonthSchedules(containers) {\r\n    let days = calendar.getFullMonth();\r\n    let sched;\r\n    for (let i = 0; i < 42; i++) {\r\n        let dayParagraphElm = containers[i % 7].children[1].children[Math.floor(i / 7)];\r\n        (JSON_calendar[days[i].year] === undefined)? //get schedule for the day\r\n            sched = \"000\" :\r\n            sched = JSON_calendar[days[i].year][days[i].month - 1][days[i].day - 1];\r\n        if (JSON_sched[sched] === undefined) {sched = \"000\";}\r\n        dayParagraphElm.innerHTML = days[i].day; //set day number\r\n        dayParagraphElm.style =\r\n            getBackground(JSON_sched[sched].metadata.color, (days[i].month == calendar.currentMonth)); //set day color and background\r\n\r\n        if (days[i].userData === undefined) {\r\n            days[i].userData = {active: sched, previous: null}\r\n        } else {\r\n            days[i].userData.active = sched;\r\n        }\r\n\r\n        dayParagraphElm.onclick = function() { //update schedule information when clicking on day\r\n            displaySchedule(days[i].userData.active);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the month heading to current month and year\r\n * Sets days of month with proper schedule and coloring\r\n * calendarSection - global variable reference to calendar in HTML\r\n * calendar - global Calendar object\r\n */\r\nfunction setCurrentMonthDisplay() {\r\n    calendarSection.children[0].children[1].children[0].textContent =\r\n        MONTH_NAMES[calendar.currentMonth -1] + \" \" + calendar.currentYear;\r\n    setMonthSchedules(calendarSection.children[1].children);\r\n}\r\n\r\n/**\r\n * calculates if the text inside the color needs to be switched (ex. black to white)\r\n * returns a string for HTML stylesheet\r\n */\r\nfunction getBackground(color, inMonth) {\r\n    return \"background:radial-gradient(1.5rem circle,\" + color + \" 40%,\" +  ((inMonth)? \"transparent\": \"var(--secondary-background-color)\")  + \" 41%);\\\r\n    color:var(--container-text-color)\";\r\n}\r\n\r\n/**\r\n * Converts 24 hour to 12 hour time\r\n * @param {String} time time in HH:MM form\r\n * @returns String time in HH:MM form\r\n */\r\nfunction to12HTime(time) {\r\n    time = time.split(\":\");\r\n    let digit = parseInt(time[0]);\r\n    time[0] = (digit > 12)? padDigit(digit % 12) : padDigit( digit );\r\n    return time.join(\":\");\r\n}\r\nfunction padDigit(number) {\r\n  if (number < 10) {\r\n      return `0${number}`\r\n  } else {\r\n      return number + '';\r\n  }\r\n}"]}