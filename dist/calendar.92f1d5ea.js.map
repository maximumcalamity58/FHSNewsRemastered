{"version":3,"sources":["js/calendar.js"],"names":["MONTH_NAMES","MONTH_NAMES_ABR","DAYS_OF_WEEK","DAYS_OF_WEEK_ABR","DAYS_OF_WEEK_LETTERS","Day","year","month","day","date","Date","userData","undefined","Month","daysInMonth","getDate","days","i","push","Year","months","Calendar","loopYear","arguments","length","now","currentYear","getFullYear","currentMonth","getMonth","years","loopCurrentYear","prototype","toString","getMonthName","abr","getDayOfWeek","getDay","getNumberDaysPerMonth","numberDaysInMonths","map","getFullMonth","arr","numPrev","updateYear","factor","shift","pop","unshift","updateMonth","Math","abs","getYear"],"mappings":"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","file":"calendar.92f1d5ea.js","sourceRoot":"..","sourcesContent":["/**\r\n * classes to represent a calendar year\r\n * @version December 20th, 2021\r\n * @authors Logan Cover\r\n **/\r\n\r\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nconst MONTH_NAMES_ABR = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst DAYS_OF_WEEK = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nconst DAYS_OF_WEEK_ABR = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\r\nconst DAYS_OF_WEEK_LETTERS = ['U', 'M', 'T', 'W', 'R', 'F', 'S'];\r\n\r\nfunction Day(year, month, day) { //represents a day of the year\r\n\tthis.year = year;\r\n\tthis.month = month;\r\n\tthis.day = day;\r\n\tthis.date = new Date(year, month - 1, day);\r\n\tthis.userData = undefined; //holds information about schedule\r\n}\r\n\r\nDay.prototype = {\r\n\ttoString: function () {\r\n\t\treturn ((this.month < 10) ? \"0\" + this.month : this.month + \"\") + \"/\" + ((this.day < 10) ? \"0\" + this.day : this.day + \"\") + \"/\" + this.year;\r\n\t},\r\n\tgetMonthName: function (abr) {\r\n\t\tif (abr) {\r\n\t\t\treturn MONTH_NAMES_ABR[this.month - 1];\r\n\t\t}\r\n\t\treturn MONTH_NAMES[this.month - 1];\r\n\t},\r\n\tgetDayOfWeek: function () {\r\n\t\treturn this.date.getDay();\r\n\t}\r\n};\r\n\r\nfunction Month(year, month) { //represents a month of the year\r\n\tthis.month = month;\r\n\tthis.year = year;\r\n\tthis.daysInMonth = (new Date(year, month, 0)).getDate();\r\n\tthis.days = [];\r\n\tfor (let i = 1; i < this.daysInMonth + 1; i++) {\r\n\t\tthis.days.push(new Day(year, month, i));\r\n\t}\r\n}\r\n\r\nfunction Year(year) { // represents a year\r\n\tthis.year = year;\r\n\tthis.months = [];\r\n\tfor (let i = 1; i < 13; i++) {\r\n\t\tthis.months.push(new Month(year, i));\r\n\t}\r\n}\r\n\r\nYear.prototype = {\r\n\tgetNumberDaysPerMonth: function () {\r\n\t\treturn numberDaysInMonths = this.months.map(month => month.daysInMonth);\r\n\t}\r\n}\r\n\r\nfunction Calendar(loopYear = false) { // represents a calendar year\r\n\tthis.now = new Date(); //current user date\r\n\tthis.currentYear = this.now.getFullYear();\r\n\tthis.currentMonth = this.now.getMonth() + 1;\r\n\tthis.years = []; //list of currentYear -1, currentYear, currentYear +1\r\n\tthis.loopCurrentYear = loopYear; //current year to display\r\n\tfor (let i = -1; i < 2; i++) {\r\n\t\tthis.years.push(new Year(this.currentYear + i));\r\n\t}\r\n}\r\n\r\nCalendar.prototype = {\r\n\tgetFullMonth: function (m = this.currentMonth) { //returns month of 42 days (7 days by 6 weeks) (past month, current month, next month)\r\n\t\tlet arr = [],\r\n\t\t\tmonth = m || this.currentMonth,\r\n\t\t\tnumPrev = this.years[1].months[month - 1].days[0].getDayOfWeek();\r\n\r\n\t\tfor (let i = 0; i < 42; i++) {\r\n\t\t\tif (i < numPrev) { //number of days in previous month that overlapp here\r\n\t\t\t\tif (month == 1) { //Check if January\r\n\t\t\t\t\tarr.push(this.years[(this.loopCurrentYear) ? 1 : 0].months[11].days[31 - numPrev + i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarr.push(this.years[1].months[month - 2].days[this.years[1].months[month - 2].daysInMonth - numPrev + i]);\r\n\t\t\t\t}\r\n\t\t\t} else if (i < numPrev + this.years[1].months[month - 1].daysInMonth) {\r\n\t\t\t\tarr.push(this.years[1].months[month - 1].days[i - numPrev]);\r\n\t\t\t} else {\r\n\t\t\t\tif (month == 12) { //check if December\r\n\t\t\t\t\tarr.push(this.years[(this.loopCurrentYear) ? 1 : 2].months[0].days[i - (numPrev + this.years[1].months[month - 1].daysInMonth)]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarr.push(this.years[1].months[month].days[i - (numPrev + this.years[1].months[month - 1].daysInMonth)]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\t//only takes -1 and 1\r\n\tupdateYear: function (factor) {\r\n\t\tif (factor === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (factor > 0) {\r\n\t\t\tthis.currentYear = this.years[2].year;\r\n\t\t\tthis.years.shift();\r\n\t\t\tthis.years.push(new Year(this.currentYear + 1));\r\n\t\t} else {\r\n\t\t\tthis.currentYear = this.years[0].year;\r\n\t\t\tthis.years.pop();\r\n\t\t\tthis.years.unshift(new Year(this.currentYear - 1));\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t//only takes -1 and 1\r\n\tupdateMonth: function (factor) {\r\n\t\tif (factor === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfactor /= Math.abs(factor);\r\n\t\tthis.currentMonth += factor;\r\n\t\tif (this.currentMonth == 13) {\r\n\t\t\tthis.currentMonth = 1;\r\n\t\t\tif (!this.loopCurrentYear) {\r\n\t\t\t\treturn this.updateYear(factor);\r\n\t\t\t}\r\n\t\t} else if (this.currentMonth === 0) {\r\n\t\t\tthis.currentMonth = 12;\r\n\t\t\tif (!this.loopCurrentYear) {\r\n\t\t\t\treturn this.updateYear(factor);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t/**\r\n\t * returns the Year object associated to the year parameter. Null if not in proper range\r\n\t * year - numerical year value to find\r\n\t */\r\n\tgetYear: function (year) {\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tif (this.years[i].year == year) {\r\n\t\t\t\treturn this.years[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n"]}