{"version":3,"sources":["js/clockv4.js"],"names":["countdown","endTime","now","Date","specialEndTime","timePeriodMapping","startTime","periodName","lunchTimings","currentPeriodIndex","getCurrentPeriodIndex","i","length","_timePeriodMapping$i$2","_slicedToArray","split","map","Number","endHours","endMinutes","potentialEndTime","setHours","to12HourFormat","timeStr","_timeStr$split$map2","hours","minutes","concat","initializeCountdown","document","getElementById","updatePeriod","tick","window","advanceToNextPeriod","console","log","_timePeriodMapping$cu2","startHours","startMinutes","advanceToPreviousPeriod","_timePeriodMapping$cu4","selectedLunchType","currentPeriodMapping","getDay","nextMonday","setDate","getDate","_timePeriodMapping$0$2","_timePeriodMapping$cu6","_currentPeriodMapping2","textContent","_currentPeriodMapping4","periodStartTime","lunchButtons","classList","remove","add","updateProgressBar","gallery","innerHTML","dot","createElement","className","appendChild","periodEndTime","progressPercentage","style","width","updateClock","timeRemaining","Math","floor","seconds","_currentPeriodMapping6","requestAnimationFrame","chooseLunch","lunchType","buttonElement","allLunchButtons","querySelectorAll","contains","forEach","btn","addEventListener"],"mappings":";AAqPgE,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,KAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,KAAA,IAAA,KAAA,IAAA,EAAA,CAAA,GAAA,OAAA,KAAA,EAAA,OAAA,GAAA,OAAA,OAAA,GAAA,EAAA,EAAA,KAAA,IAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,GAAA,MAAA,EAAA,SAAA,EAAA,EAAA,SAAA,OAAA,KAAA,GAAA,OAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA/OhE,IAAIA,EAEAC,EADAC,EAAM,IAAIC,KAEVC,EAAiB,KAEjBC,EAAoB,CACpB,CAAEC,UAAW,QAASL,QAAS,QAASM,WAAY,kBACpD,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,YACpD,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,kBACpD,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,YACpD,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,oBACpD,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,kBACpD,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,aAGpDC,EAAe,CACf,EAAK,CAAEF,UAAW,QAASL,QAAS,QAASM,WAAY,WACzD,EAAK,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,WACzD,EAAK,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,WACzD,EAAK,CAAED,UAAW,QAASL,QAAS,QAASM,WAAY,YAKzDE,EAAqBC,IAEzB,SAASA,IACL,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAkBO,OAAQD,IAAK,CAC/C,IAAgFE,EAAAC,EAAnDT,EAAkBM,GAAGV,QAAQc,MAAM,KAAKC,IAAIC,QAAO,GAA3EC,EAAQL,EAAA,GAAEM,EAAUN,EAAA,GACrBO,EAAmB,IAAIjB,KAAKD,GAGhC,GAFAkB,EAAiBC,SAASH,EAAUC,EAAY,EAAG,GAE/CjB,EAAMkB,EACN,OAAOT,EAGf,OAAO,EAGX,SAASW,EAAeC,GACpB,IAAqDC,EAAAV,EAA9BS,EAAQR,MAAM,KAAKC,IAAIC,QAAO,GAAhDQ,EAAKD,EAAA,GAAEE,EAAOF,EAAA,GAGnB,OADAE,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzCC,GAAAA,OAFAF,EAAQA,EAAQ,IAAM,GAEPE,KAAAA,OAAID,GAgCvB,SAASE,IACL5B,EAAY6B,SAASC,eAAe,oBACpC5B,EAAM,IAAIC,KACV4B,IACAC,IAjCJC,OAAOC,oBAAsB,WAOzB,GANAC,QAAQC,IAAI,KACR3B,EAAqBJ,EAAkBO,OAAS,IAChDH,IACAsB,KAGA3B,EAAgB,CAChB,IAAuGiC,EAAAvB,EAAtET,EAAkBI,GAAoBH,UAAUS,MAAM,KAAKC,IAAIC,QAAO,GAAlGqB,EAAUD,EAAA,GAAEE,EAAYF,EAAA,GAC7BjC,EAAeiB,SAASiB,EAAYC,EAAc,EAAG,KAI7DN,OAAOO,wBAA0B,WAM7B,GALI/B,EAAqB,IACrBA,IACAsB,KAGA3B,EAAgB,CAChB,IAAuGqC,EAAA3B,EAAtET,EAAkBI,GAAoBH,UAAUS,MAAM,KAAKC,IAAIC,QAAO,GAAlGqB,EAAUG,EAAA,GAAEF,EAAYE,EAAA,GAC7BrC,EAAeiB,SAASiB,EAAYC,EAAc,EAAG,KAe7D,IAAIG,EAAoB,KAExB,SAASX,IACL,IAAIY,EAAuBtC,EAAkBI,GAI7C,GAFAL,EAAiB,KAEI,IAAjBF,EAAI0C,UAAmC,IAAjB1C,EAAI0C,SAAgB,CAE1C,IAAIC,EAAa,IAAI1C,KAAKD,GAC1B2C,EAAWC,QAAQD,EAAWE,WAAa,EAAIF,EAAWD,SAAW,GAAK,GAC1E,IAAsFI,EAAAlC,EAArDT,EAAkB,GAAGC,UAAUS,MAAM,KAAKC,IAAIC,QAAO,GAAjFqB,EAAUU,EAAA,GAAET,EAAYS,EAAA,IAC7B5C,EAAiB,IAAID,KAAK0C,IACXxB,SAASiB,EAAYC,EAAc,EAAG,QAClD,GAAqB,IAAjBrC,EAAI0C,UAAkB1C,EAAMD,EAAS,CAE5C,IAAI4C,EAAa,IAAI1C,KAAKD,GAC1B2C,EAAWC,QAAQD,EAAWE,UAAY,GAC1C,IAAuGE,EAAAnC,EAAtET,EAAkBI,GAAoBH,UAAUS,MAAM,KAAKC,IAAIC,QAAO,GAAlGqB,EAAUW,EAAA,GAAEV,EAAYU,EAAA,IAC7B7C,EAAiB,IAAID,KAAK0C,IACXxB,SAASiB,EAAYC,EAAc,EAAG,GAGzD,GAAII,EAAsB,CAEkB,qBAApCA,EAAqBpC,YAAqCmC,IAC1DC,EAAuBnC,EAAakC,IAGxC,IAAgFQ,EAAApC,EAAnD6B,EAAqB1C,QAAQc,MAAM,KAAKC,IAAIC,QAAO,GAA3EC,EAAQgC,EAAA,GAAE/B,EAAU+B,EAAA,IACzBjD,EAAU,IAAIE,KAAKD,IACXmB,SAASH,EAAUC,EAAY,EAAG,GAE1CU,SAASC,eAAe,kBAAkBqB,YAAcR,EAAqBpC,WAC7EsB,SAASC,eAAe,gBAAgBqB,YAAWxB,GAAAA,OAAML,EAAeqB,EAAqBrC,WAAUqB,OAAAA,OAAML,EAAeqB,EAAqB1C,UAEjJ,IAAsFmD,EAAAtC,EAArD6B,EAAqBrC,UAAUS,MAAM,KAAKC,IAAIC,QAAO,GAAjFqB,EAAUc,EAAA,GAAEb,EAAYa,EAAA,GACzBC,EAAkB,IAAIlD,KAAKD,GAC/BmD,EAAgBhC,SAASiB,EAAYC,EAAc,EAAG,GAEtD,IAAIe,EAAezB,SAASC,eAAe,SACH,qBAApCa,EAAqBpC,YAAqCoC,IAAyBnC,EAAakC,GAChGY,EAAaC,UAAUC,OAAO,UAE9BF,EAAaC,UAAUE,IAAI,UAG/BC,EAAkBL,EAAiBpD,QAEnCA,EAAU,IAAIE,KAAKD,GACnB2B,SAASC,eAAe,kBAAkBqB,YAAc,mBACxDtB,SAASC,eAAe,gBAAgBqB,YAAc,GAI1D,IAAIQ,EAAU9B,SAASC,eAAe,mBACtC6B,EAAQC,UAAY,GAEpB,IAAK,IAAIjD,EAAI,EAAGA,EAAIN,EAAkBO,OAAQD,IAAK,CAC/C,IAAIkD,EAAMhC,SAASiC,cAAc,OACjCD,EAAIE,UAAY,cAGZpD,IAAMF,GACNoD,EAAIN,UAAUE,IAAI,UAGtBE,EAAQK,YAAYH,IAI5B,SAASH,EAAkBL,EAAiBY,GACxC,IAIMC,GAHkBhE,EAAMmD,IADRY,EAAgBZ,GAIyB,IAG/DxB,SAASC,eAAe,uBAAuBqC,MAAMC,MAAKzC,GAAAA,OAAMuC,EAAqB,KAgCzF,SAASG,IACLnE,EAAM,IAAIC,KAGV,IAGImE,IAHelE,GAAkCH,GAGjBC,GAAO,IAGvCoE,GAAiB,IAEjBrE,EAAQ6C,QAAQ7C,EAAQ8C,UAAY,GACpCuB,GAAiBrE,EAAUC,GAAO,KAItC,IAAIuB,EAAQ8C,KAAKC,MAAMF,EAAgB,MACvCA,GAAiB,KACjB,IAAI5C,EAAU6C,KAAKC,MAAMF,EAAgB,IACrCG,EAAUF,KAAKC,MAAMF,EAAgB,IAIrCtE,EAAUmD,YADV1B,EAAQ,EACaE,GAAAA,OAAMF,EAAKE,KAAAA,OAAID,EAAU,GAAK,IAAM,IAAEC,OAAGD,EAAOC,KAAAA,OAAI8C,EAAU,GAAK,IAAM,IAAE9C,OAAG8C,GAE9E9C,GAAAA,OAAMD,EAAU,GAAK,IAAM,IAAEC,OAAGD,EAAOC,KAAAA,OAAI8C,EAAU,GAAK,IAAM,IAAE9C,OAAG8C,GAI9F,IAAI9B,EAAuBtC,EAAkBI,GAC7C,GAAIkC,EAAsB,CACtB,IAAsF+B,EAAA5D,EAArD6B,EAAqBrC,UAAUS,MAAM,KAAKC,IAAIC,QAAO,GAAjFqB,EAAUoC,EAAA,GAAEnC,EAAYmC,EAAA,GACzBrB,EAAkB,IAAIlD,KAAKD,GAC/BmD,EAAgBhC,SAASiB,EAAYC,EAAc,EAAG,GACtDmB,EAAkBL,EAAiBpD,IAM3C,SAAS+B,IACLqC,IACAM,sBAAsB3C,GAxE1BC,OAAO2C,YAAc,SAASC,EAAWC,GAErC,IAAIC,EAAkBlD,SAASmD,iBAAiB,6BAG5CF,EAAcvB,UAAU0B,SAAS,aAEjCH,EAAcvB,UAAUC,OAAO,YAE/Bd,EAAoB,OAGpBqC,EAAgBG,QAAQ,SAAAC,GAAG,OAAIA,EAAI5B,UAAUC,OAAO,cAGpDsB,EAAcvB,UAAUE,IAAI,YAE5Bf,EAAoBmC,GAIxB9C,KAsDJE,OAAOmD,iBAAiB,mBAAoBxD","file":"clockv4.e0ee302d.js","sourceRoot":"..","sourcesContent":["/**\r\n * @fileoverview This file updates the current time as a simple countdown.\r\n * @version August 25, 2023\r\n * @authors Maxime Hendryx-Parker\r\n **/\r\n\r\nvar countdown;\r\nvar now = new Date();\r\nvar endTime;\r\nvar specialEndTime = null;\r\n\r\nvar timePeriodMapping = [\r\n    { startTime: \"08:00\", endTime: \"08:30\", periodName: \"Passing Period\" },\r\n    { startTime: \"08:30\", endTime: \"09:53\", periodName: \"Period 1\" },\r\n    { startTime: \"09:53\", endTime: \"10:01\", periodName: \"Passing Period\" },\r\n    { startTime: \"10:01\", endTime: \"11:24\", periodName: \"Period 2\" },\r\n    { startTime: \"11:24\", endTime: \"13:24\", periodName: \"Period 3 & Lunch\" },\r\n    { startTime: \"13:24\", endTime: \"13:32\", periodName: \"Passing Period\" },\r\n    { startTime: \"13:32\", endTime: \"15:00\", periodName: \"Period 4\" }\r\n];\r\n\r\nvar lunchTimings = {\r\n    \"A\": { startTime: \"11:24\", endTime: \"11:54\", periodName: \"A Lunch\" },\r\n    \"B\": { startTime: \"11:54\", endTime: \"12:24\", periodName: \"B Lunch\" },\r\n    \"C\": { startTime: \"12:24\", endTime: \"12:54\", periodName: \"C Lunch\" },\r\n    \"D\": { startTime: \"12:54\", endTime: \"13:24\", periodName: \"D Lunch\" },\r\n};\r\n\r\n\r\n// At the top of the file\r\nlet currentPeriodIndex = getCurrentPeriodIndex();\r\n\r\nfunction getCurrentPeriodIndex() {\r\n    for (let i = 0; i < timePeriodMapping.length; i++) {\r\n        let [endHours, endMinutes] = timePeriodMapping[i].endTime.split(\":\").map(Number);\r\n        let potentialEndTime = new Date(now);\r\n        potentialEndTime.setHours(endHours, endMinutes, 0, 0);\r\n\r\n        if (now < potentialEndTime) {\r\n            return i;\r\n        }\r\n    }\r\n    return 0; // Default to the first period if no matching period found\r\n}\r\n\r\nfunction to12HourFormat(timeStr) {\r\n    let [hours, minutes] = timeStr.split(\":\").map(Number);\r\n    hours = hours % 12 || 12; // Convert 0 hours to 12 for 12 AM\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    return `${hours}:${minutes}`;\r\n}\r\n\r\nwindow.advanceToNextPeriod = function() {\r\n    console.log(\"e\")\r\n    if (currentPeriodIndex < timePeriodMapping.length - 1) {\r\n        currentPeriodIndex++;\r\n        updatePeriod();\r\n    }\r\n\r\n    if (specialEndTime) {\r\n        let [startHours, startMinutes] = timePeriodMapping[currentPeriodIndex].startTime.split(\":\").map(Number);\r\n        specialEndTime.setHours(startHours, startMinutes, 0, 0);\r\n    }\r\n}\r\n\r\nwindow.advanceToPreviousPeriod = function() {\r\n    if (currentPeriodIndex > 0) {\r\n        currentPeriodIndex--;\r\n        updatePeriod();\r\n    }\r\n\r\n    if (specialEndTime) {\r\n        let [startHours, startMinutes] = timePeriodMapping[currentPeriodIndex].startTime.split(\":\").map(Number);\r\n        specialEndTime.setHours(startHours, startMinutes, 0, 0);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Initialize the countdown variables and start the tick function.\r\n */\r\nfunction initializeCountdown() {\r\n    countdown = document.getElementById(\"countdown__timer\");\r\n    now = new Date();\r\n    updatePeriod();\r\n    tick();\r\n}\r\n\r\nlet selectedLunchType = null; // This will store the type of lunch selected, if any\r\n\r\nfunction updatePeriod() {\r\n    let currentPeriodMapping = timePeriodMapping[currentPeriodIndex];\r\n\r\n    specialEndTime = null;\r\n\r\n    if (now.getDay() === 6 || now.getDay() === 0) {\r\n        // If it's a weekend, set specialEndTime to next Monday's first period\r\n        let nextMonday = new Date(now);\r\n        nextMonday.setDate(nextMonday.getDate() + (1 - nextMonday.getDay() + 7) % 7);\r\n        let [startHours, startMinutes] = timePeriodMapping[0].startTime.split(\":\").map(Number);\r\n        specialEndTime = new Date(nextMonday);\r\n        specialEndTime.setHours(startHours, startMinutes, 0, 0);\r\n    } else if (now.getDay() === 5 && now > endTime) {\r\n        // If it's Friday after last period, set specialEndTime to next Monday's corresponding period\r\n        let nextMonday = new Date(now);\r\n        nextMonday.setDate(nextMonday.getDate() + 3);\r\n        let [startHours, startMinutes] = timePeriodMapping[currentPeriodIndex].startTime.split(\":\").map(Number);\r\n        specialEndTime = new Date(nextMonday);\r\n        specialEndTime.setHours(startHours, startMinutes, 0, 0);\r\n    }\r\n\r\n    if (currentPeriodMapping) {\r\n        // Check if current period is \"Period 3 & Lunch\" and if a specific lunch type has been selected\r\n        if (currentPeriodMapping.periodName === \"Period 3 & Lunch\" && selectedLunchType) {\r\n            currentPeriodMapping = lunchTimings[selectedLunchType];\r\n        }\r\n\r\n        let [endHours, endMinutes] = currentPeriodMapping.endTime.split(\":\").map(Number);\r\n        endTime = new Date(now);\r\n        endTime.setHours(endHours, endMinutes, 0, 0);\r\n\r\n        document.getElementById(\"period__header\").textContent = currentPeriodMapping.periodName;\r\n        document.getElementById(\"period__time\").textContent = `${to12HourFormat(currentPeriodMapping.startTime)} - ${to12HourFormat(currentPeriodMapping.endTime)}`;\r\n\r\n        let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n        let periodStartTime = new Date(now);\r\n        periodStartTime.setHours(startHours, startMinutes, 0, 0);\r\n\r\n        let lunchButtons = document.getElementById(\"lunch\");\r\n        if (currentPeriodMapping.periodName === \"Period 3 & Lunch\" || currentPeriodMapping === lunchTimings[selectedLunchType]) {\r\n            lunchButtons.classList.remove(\"hidden\");\r\n        } else {\r\n            lunchButtons.classList.add(\"hidden\");\r\n        }\r\n\r\n        updateProgressBar(periodStartTime, endTime);\r\n    } else {\r\n        endTime = new Date(now);\r\n        document.getElementById(\"period__header\").textContent = \"Not School Hours\";\r\n        document.getElementById(\"period__time\").textContent = \"\";\r\n    }\r\n\r\n    // Update gallery dots\r\n    let gallery = document.getElementById(\"period__gallery\");\r\n    gallery.innerHTML = \"\"; // Clear existing dots\r\n\r\n    for (let i = 0; i < timePeriodMapping.length; i++) {\r\n        let dot = document.createElement(\"div\");\r\n        dot.className = \"gallery-dot\";\r\n\r\n        // Mark the active dot based on the current period\r\n        if (i === currentPeriodIndex) {\r\n            dot.classList.add(\"active\");\r\n        }\r\n\r\n        gallery.appendChild(dot);\r\n    }\r\n}\r\n\r\nfunction updateProgressBar(periodStartTime, periodEndTime) {\r\n    const totalDuration = periodEndTime - periodStartTime;\r\n    const elapsedDuration = now - periodStartTime;\r\n\r\n    // Calculate the percentage of time elapsed\r\n    const progressPercentage = (elapsedDuration / totalDuration) * 100;\r\n\r\n    // Set the width of the progress bar\r\n    document.getElementById(\"countdown__progress\").style.width = `${progressPercentage}%`;\r\n}\r\n\r\nwindow.chooseLunch = function(lunchType, buttonElement) {\r\n    // Get all lunch buttons\r\n    let allLunchButtons = document.querySelectorAll(\"#lunch__choose .container\");\r\n\r\n    // If the button clicked is already selected\r\n    if (buttonElement.classList.contains(\"selected\")) {\r\n        // Deselect the button\r\n        buttonElement.classList.remove(\"selected\");\r\n        // Reset the selected lunch type\r\n        selectedLunchType = null;\r\n    } else {\r\n        // If another button was previously selected, deselect it\r\n        allLunchButtons.forEach(btn => btn.classList.remove(\"selected\"));\r\n\r\n        // Mark the clicked button as selected\r\n        buttonElement.classList.add(\"selected\");\r\n        // Set the selected lunch type\r\n        selectedLunchType = lunchType;\r\n    }\r\n\r\n    // Update the period to reflect the changes\r\n    updatePeriod();\r\n}\r\n\r\n\r\n\r\n/**\r\n * updates the current time and countdown timer\r\n */\r\nfunction updateClock() {\r\n    now = new Date();\r\n\r\n    // Use specialEndTime if it's set; otherwise, use endTime\r\n    let finalEndTime = specialEndTime ? specialEndTime : endTime;\r\n\r\n    // Calculate time remaining based on finalEndTime\r\n    let timeRemaining = (finalEndTime - now) / 1000;\r\n\r\n    // If the countdown has expired, update the period\r\n    if (timeRemaining <= 0) {\r\n        // Adjust endTime to the next day's end time\r\n        endTime.setDate(endTime.getDate() + 1);\r\n        timeRemaining = (endTime - now) / 1000;\r\n    }\r\n\r\n    // Calculate hours, minutes, seconds\r\n    let hours = Math.floor(timeRemaining / 3600);\r\n    timeRemaining %= 3600;\r\n    let minutes = Math.floor(timeRemaining / 60);\r\n    let seconds = Math.floor(timeRemaining % 60);\r\n\r\n    // Display time\r\n    if (hours > 0) {\r\n        countdown.textContent = `${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    } else {\r\n        countdown.textContent = `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    }\r\n\r\n    // Update the progress bar\r\n    let currentPeriodMapping = timePeriodMapping[currentPeriodIndex];\r\n    if (currentPeriodMapping) {\r\n        let [startHours, startMinutes] = currentPeriodMapping.startTime.split(\":\").map(Number);\r\n        let periodStartTime = new Date(now);\r\n        periodStartTime.setHours(startHours, startMinutes, 0, 0);\r\n        updateProgressBar(periodStartTime, endTime);\r\n    }\r\n}\r\n\r\n\r\n// main loop\r\nfunction tick() {\r\n    updateClock();\r\n    requestAnimationFrame(tick);\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", initializeCountdown);\r\n"]}