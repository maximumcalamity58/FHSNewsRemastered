{"version":3,"sources":["js/calendar_html.js"],"names":["createScheduleHead","ID","arguments","length","undefined","createElement","JSON_sched","metadata","name","createScheduleMain","period","startTimeDigits","endTimeDigits","createPeriodHeading","createPeriodTime","to12HTime","createScheduleLabelBlock","_step","subParts","block","_iterator","_createForOfIteratorHelper","s","n","done","part","value","appendChild","err","e","f","fillSchedule","container","_step2","head","scheduleSection","children","body","_iterator2","item","i","periods","intraschedule","_step3","_iterator3","Object","getOwnPropertyNames","key","clearSchedule","firstChild","removeChild","displaySchedule","classList","setMonthSchedules","containers","sched","days","calendar","getFullMonth","_loop","dayParagraphElm","Math","floor","JSON_calendar","year","month","day","innerHTML","style","getBackground","color","currentMonth","userData","active","previous","onclick","setCurrentMonthDisplay","calendarSection","textContent","MONTH_NAMES","currentYear","inMonth","time","parseInt","padDigit","concat"],"mappings":"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","file":"calendar_html.19ed306d.js","sourceRoot":"..","sourcesContent":["/**\r\n * Creates a schedule heading\r\n * @param {string} ID - name of the schedule\r\n * @returns HTML elements to display for the heading\r\n */\r\nfunction createScheduleHead(ID = \"\"){\r\n  let headingElements = [\r\n    createElement(\"div\", [\"class\",\"schedule_container edit\"],\r\n    [\"children\",\r\n      [\r\n        createElement(\"div\",[\"class\",\"schedule_text_container\"],\r\n        [\"children\",\r\n          [\r\n            createElement(\"p\",[\"text\" , (ID === \"\")? \"Undefined\" : JSON_sched[ID].metadata.name])\r\n          ]\r\n        ])\r\n      ]\r\n    ])\r\n  ];\r\n  return headingElements;\r\n}\r\n/**\r\n * Create schedule HTML to display a single period name, times, and possible sub-entries\r\n * @param {Object} period object with name, start time, end time\r\n * @returns HTML element\r\n */\r\nfunction createScheduleMain(period = {name:\"\", startTimeDigits: \"\", endTimeDigits:\"\"}){\r\n  return createElement(\"div\",[\"class\",\"schedule_part\"],[\"children\",\r\n    [\r\n      createPeriodHeading(period.name),\r\n      createPeriodTime(period)\r\n    ]\r\n  ]);\r\n}\r\n/**\r\n * Creates period heading\r\n */\r\nfunction createPeriodHeading(name = \"\"){\r\n  return createElement(\"div\", [\"class\", \"period_heading\"], [\"children\",\r\n    [\r\n      createElement(\"p\",[\"text\",name])\r\n    ]\r\n  ])\r\n}\r\n/**\r\n * Creates period timing HTML display\r\n */\r\nfunction createPeriodTime(period = {startTimeDigits: \"\", endTimeDigits: \"\"}){\r\n  return createElement(\"div\", [\"class\", \"period_time\"], [\"children\",[\r\n  createElement(\"p\", [\"text\",  to12HTime(period.startTimeDigits)]),\r\n  createElement(\"p\", [\"text\", \"-\"] ),\r\n  createElement(\"p\", [\"text\",  to12HTime(period.endTimeDigits)])\r\n  ] ]\r\n  );\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction createScheduleLabelBlock(name = \"\", subParts = []){\r\n  let block = createElement(\"div\", [\"class\",\"label_block\"], [\"children\",\r\n  [createPeriodHeading(name, true, true)]\r\n  ]);\r\n  for(let part of subParts){\r\n    block.appendChild(createScheduleMain(part, false, true));\r\n  }\r\n\r\n  return block;\r\n}\r\n/**\r\n * Displays schedule passed in\r\n * @param {String} ID id of the schedule to display\r\n */\r\nfunction fillSchedule(ID){\r\n  let head = scheduleSection.children[0].children[0],\r\n  body = scheduleSection.children[0].children[1],\r\n  container;\r\n  for (let item of createScheduleHead(ID)) {\r\n    head.appendChild(item);\r\n  }\r\n  for(let i=0; i < JSON_sched[ID].periods.length; i++){\r\n    container = createElement(\"div\", [\"class\",\"part_container\"]);\r\n    container.appendChild(createScheduleMain(JSON_sched[ID].periods[i]));\r\n    if(JSON_sched[ID].periods[i].intraschedule != null){\r\n      for(let key of Object.getOwnPropertyNames(JSON_sched[ID].periods[i].intraschedule) ){\r\n          container.appendChild(createScheduleLabelBlock(key, JSON_sched[ID].periods[i].intraschedule[key]));\r\n      }\r\n    }\r\n\r\n    body.appendChild( container );\r\n  }\r\n}\r\n\r\n/**\r\n * clears currently displayed HTML\r\n */\r\nfunction clearSchedule(){\r\n    for(let i =0; i < 2; i++){\r\n        while(scheduleSection.children[0].children[i].firstChild){\r\n            scheduleSection.children[0].children[i].removeChild(scheduleSection.children[0].children[i].firstChild);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fills schedule editing section with the current schedule\r\n * @param {boolean} isNew whether a new or existing schedule\r\n */\r\nfunction displaySchedule(ID) {\r\n    clearSchedule();\r\n    fillSchedule(ID);\r\n    scheduleSection.classList = \"\";\r\n}\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------//-------------------------------------------------------------------------------------------------------------------------------------\r\n//-------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Set schedule data on each calendar day for current month\r\n * containers - HTML elements containing days on calendar (stored in columns)\r\n * calendar - global calendar object\r\n * JSON_calendar - global variable representing JSON object to store in file\r\n */\r\nfunction setMonthSchedules(containers) {\r\n    let days = calendar.getFullMonth();\r\n    let sched;\r\n    for (let i = 0; i < 42; i++) {\r\n        let dayParagraphElm = containers[i % 7].children[1].children[Math.floor(i / 7)];\r\n        (JSON_calendar[days[i].year] === undefined)? //get schedule for the day\r\n            sched = \"000\" :\r\n            sched = JSON_calendar[days[i].year][days[i].month - 1][days[i].day - 1];\r\n        if (JSON_sched[sched] === undefined) {sched = \"000\";}\r\n        dayParagraphElm.innerHTML = days[i].day; //set day number\r\n        dayParagraphElm.style =\r\n            getBackground(JSON_sched[sched].metadata.color, (days[i].month == calendar.currentMonth)); //set day color and background\r\n\r\n        if (days[i].userData === undefined) {\r\n            days[i].userData = {active: sched, previous: null}\r\n        } else {\r\n            days[i].userData.active = sched;\r\n        }\r\n\r\n        dayParagraphElm.onclick = function() { //update schedule information when clicking on day\r\n            displaySchedule(days[i].userData.active);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the month heading to current month and year\r\n * Sets days of month with proper schedule and coloring\r\n * calendarSection - global variable reference to calendar in HTML\r\n * calendar - global Calendar object\r\n */\r\nfunction setCurrentMonthDisplay() {\r\n    calendarSection.children[0].children[1].children[0].textContent =\r\n        MONTH_NAMES[calendar.currentMonth -1] + \" \" + calendar.currentYear;\r\n    setMonthSchedules(calendarSection.children[1].children);\r\n}\r\n\r\n/**\r\n * calculates if the text inside the color needs to be switched (ex. black to white)\r\n * returns a string for HTML stylesheet\r\n */\r\nfunction getBackground(color, inMonth) {\r\n    return \"background:radial-gradient(1.5rem circle,\" + color + \" 40%,\" +  ((inMonth)? \"transparent\": \"var(--secondary-background-color)\")  + \" 41%);\\\r\n    color:var(--container-text-color)\";\r\n}\r\n\r\n/**\r\n * Converts 24 hour to 12 hour time\r\n * @param {String} time time in HH:MM form\r\n * @returns String time in HH:MM form\r\n */\r\nfunction to12HTime(time) {\r\n    time = time.split(\":\");\r\n    let digit = parseInt(time[0]);\r\n    time[0] = (digit > 12)? padDigit(digit % 12) : padDigit( digit );\r\n    return time.join(\":\");\r\n}\r\nfunction padDigit(number) {\r\n  if (number < 10) {\r\n      return `0${number}`\r\n  } else {\r\n      return number + '';\r\n  }\r\n}"]}