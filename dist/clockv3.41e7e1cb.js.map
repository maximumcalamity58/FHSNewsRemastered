{"version":3,"sources":["js/clockv3.js"],"names":["updateClockFrame","secOffset","minOffset","hourOffset","enableOffset","periodBox","document","getElementById","countdown","now","newDateAdjusted","curTotalSec","pageLoadDate","toISOString","split","schedname","undefined","JSON_calendar","getFullYear","getMonth","getDate","schedule","JSON_sched","index_obj","main_index","Date","updateClock","getHours","getMinutes","getSeconds","window","location","reload","tick","updateDisplay","cancelAnimationFrame","requestAnimationFrame","init","_step","i","_iterator","_createForOfIteratorHelper","periods","s","n","done","period","value","isEmpty","intraschedule","getTimeRemaining","children","appendChild","createElement","err","e","f","length","updateTimer","updateScheduleDisplay","classList","displaySubPeriodOptions","timeRemaining","displayBlank","textContent","style","width","progress","startTime","endTime","timeArr","unshift","map","t","concat","join","intraindex","name","to12HTime","startTimeDigits","endTimeDigits","buttons","_loop","sub","push","onclick","_step2","_iterator2","subBox","child","j","replaceAllChildren","arguments","arrowAdvancePeriod","direction","skip","console","log","object","time","digit","parseInt","padDigit","number","addEventListener"],"mappings":"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","file":"clockv3.41e7e1cb.js","sourceRoot":"..","sourcesContent":["/**\r\n * @fileoverview This file updates the current time in reference to the schedule\r\n * that the current day is running. This file only applies to the home page of\r\n * each school, otherwise known as the main, timer page.\r\n * @version January 3rd, 2023\r\n * @authors Logan Cover, Skylar Smith, Gabriel Iskandar\r\n **/\r\n\r\nvar updateClockFrame = 0; //used for animation frame tracking\r\n\r\nvar secOffset = -1; //seconds offset (always set to -1)\r\nvar minOffset = 0; //minute offset (testing variable)\r\nvar hourOffset = 0; //hour offset (testing variable)\r\nvar enableOffset = false;\r\n\r\nvar periodBox = document.getElementById(\"period__time\");\r\nvar countdown = document.getElementById(\"countdown__timer\");\r\nvar now = newDateAdjusted(); //user's current time\r\nvar curTotalSec = 0; //user's current time in seconds\r\nconst pageLoadDate = now.toISOString().split('T')[0]; //date the user loaded the page\r\nconst schedname = (JSON_calendar[now.getFullYear()] === undefined) ? \"000\" :\r\n\tJSON_calendar[now.getFullYear()][now.getMonth()][now.getDate() - 1]; //name of the day's schedule\r\nconst schedule = (JSON_sched[schedname] === undefined) ? JSON_sched[\"000\"] : JSON_sched[schedname]; //schedule the timer follows\r\n\r\nvar index_obj = { //index object to track main schedule and sub schedule positions\r\n\tmain_index: -1\r\n}\r\n\r\n/**\r\n * corrects the current time based on the offset (testing) variables\r\n * @returns a new Date object given the offsets\r\n **/\r\nfunction newDateAdjusted() {\r\n\treturn new Date(\r\n\t\tDate.now() // user's clock\r\n\t\t+ (1000 * secOffset) + (60000 * minOffset) + (3600000 * hourOffset) // because it's easier to do this than fix the off-by-one error\r\n\t);\r\n}\r\n\r\n/**\r\n * updates the timing system used\r\n * @returns boolean if the day was not reloaded (not relevant value)\r\n */\r\nfunction updateClock() {\r\n\tnow = newDateAdjusted();\r\n\tcurTotalSec = (now.getHours() * 60 * 60) + now.getMinutes() * 60 + now.getSeconds();\r\n\tif (pageLoadDate != now.toISOString().split('T')[0]) {\r\n\t\t// new day\r\n\t\twindow.location.reload(true);\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n//main loop\r\nfunction tick() {\r\n\tif (updateClock()) {\r\n\t\tupdateDisplay();\r\n\t\twindow.cancelAnimationFrame(updateClockFrame);\r\n\t\tupdateClockFrame = window.requestAnimationFrame(tick);\r\n\t} else {\r\n\t\twindow.cancelAnimationFrame(updateClockFrame);\r\n\t}\r\n}\r\n\r\n/**\r\n * initializes the schedule and timing system\r\n */\r\nfunction init() {\r\n\tupdateClock();\r\n\tlet i = 0;\r\n\tfor (let period of schedule.periods) {\r\n\t\tif (!isEmpty(period.intraschedule)) {\r\n\t\t\tindex_obj[i] = 0;\r\n\t\t}\r\n\t\tif (getTimeRemaining(period) < 0) {\r\n\t\t\tindex_obj.main_index = i + 1;\r\n\t\t}\r\n\t\tperiodBox.children[2].appendChild(createElement('button', [\"class\", \"gallery-dot\"]));\r\n\t\ti++;\r\n\t}\r\n\t//paint screen\r\n\tif (index_obj.main_index == -1 || index_obj.main_index == schedule.periods.length) {\r\n\t\tupdateTimer(0, true, null);\r\n\t\tupdateScheduleDisplay(true);\r\n\t} else {\r\n\t\tupdateScheduleDisplay(false);\r\n\t\tupdateTimer(getTimeRemaining(), false, schedule.periods[index_obj.main_index]);\r\n\t\tperiodBox.children[2].children[index_obj.main_index].classList = \"gallery-dot active\";\r\n\t\tif (!isEmpty(schedule.periods[index_obj.main_index].intraschedule)) {\r\n\t\t\tdisplaySubPeriodOptions(schedule.periods[index_obj.main_index]);\r\n\t\t}\r\n\t}\r\n\t//start loop\r\n\ttick();\r\n}\r\n\r\n/**\r\n * updates the countdown and progress bar\r\n * @param {Integer} timeRemaining time remaining until the endTime\r\n * @param {boolean} displayBlank if the current schedule is not active\r\n * @param {Object} period period object (should be current active)\r\n */\r\nfunction updateTimer(timeRemaining, displayBlank, period) {\r\n\tif (displayBlank || timeRemaining < 0) {\r\n\t\tcountdown.children[0].textContent = \"--:--\";\r\n\t\tcountdown.children[1].children[0].style.width = \"0%\";\r\n\t} else {\r\n\t\t//calculate display time\r\n\t\tlet progress;\r\n\t\tif (curTotalSec < period.startTime) {\r\n\t\t\tprogress = \"0%\";\r\n\t\t\ttimeRemaining -= (period.endTime - period.startTime);\r\n\t\t} else {\r\n\t\t\tprogress = (1 - (timeRemaining / (period.endTime - period.startTime))) * 100 + \"%\";\r\n\t\t}\r\n\t\tlet timeArr = [];\r\n\t\tdo {\r\n\t\t\ttimeArr.unshift(timeRemaining % 60);\r\n\t\t\ttimeRemaining = (timeRemaining / 60) >> 0; //integer division\r\n\t\t} while (timeRemaining != 0);\r\n\r\n\t\tcountdown.children[0].textContent = timeArr.map(t => (t < 10) ? `0${t}` : t).join(\":\");\r\n\t\tcountdown.children[1].children[0].style.width = progress;\r\n\t}\r\n}\r\n\r\n/**\r\n * updates the schedule name and time\r\n * @param {boolean} displayBlank if the current schedule is not active\r\n */\r\nfunction updateScheduleDisplay(displayBlank) {\r\n\tif (displayBlank) {\r\n\t\tperiodBox.children[0].textContent = \"\";\r\n\t\tperiodBox.children[1].textContent = \"Not School Hours\";\r\n\t} else {\r\n\t\tlet period = schedule.periods[index_obj.main_index];\r\n\t\tif (period.intraindex != -1) {\r\n\t\t\tperiod = period.intraschedule[period.intraindex][index_obj[index_obj.main_index]];\r\n\t\t}\r\n\t\tperiodBox.children[0].textContent = period.name;\r\n\t\tperiodBox.children[1].textContent = to12HTime(period.startTimeDigits) + \" - \" + to12HTime(period.endTimeDigits);\r\n\t}\r\n}\r\n\r\n/**\r\n * Displays information on the current active period\r\n */\r\nfunction updateDisplay() {\r\n\tlet period = schedule.periods[index_obj.main_index];\r\n\tif (period == undefined) {\r\n\t\treturn;\r\n\t}\r\n\tlet timeRemaining = getTimeRemaining();\r\n\tif (timeRemaining == 0) { //update to next period\r\n\t\tperiodBox.children[2].children[index_obj.main_index].classList = \"gallery-dot\";\r\n\t\tif (period.intraindex != -1 &&\r\n\t\t\t(index_obj[index_obj.main_index] !=\r\n\t\t\t\t(period.intraschedule[period.intraindex].length - 1))) {\r\n\t\t\t//If within a sub period and we don't advance to the next main period\r\n\t\t\tindex_obj[index_obj.main_index] += 1;\r\n\t\t} else { //advancing the next main period\r\n\t\t\tindex_obj.main_index += 1;\r\n\t\t}\r\n\t\tif (index_obj.main_index < schedule.periods.length) {\r\n\t\t\tperiodBox.children[2].children[index_obj.main_index].classList = \"gallery-dot active\";\r\n\t\t}\r\n\t\tupdateScheduleDisplay((index_obj.main_index == schedule.periods.length || index_obj.main_index == -1));\r\n\t\tdisplaySubPeriodOptions(schedule.periods[index_obj.main_index]);\r\n\t}\r\n\tif (period.intraindex != -1) {\r\n\t\tperiod = period.intraschedule[period.intraindex][index_obj[index_obj.main_index]];\r\n\t}\r\n\tupdateTimer(timeRemaining, (index_obj.main_index == schedule.periods.length || index_obj.main_index == -1), period);\r\n}\r\n\r\n/**\r\n * Displays options to use a sub period schedule\r\n * @param {Object} period period object\r\n */\r\nfunction displaySubPeriodOptions(period) {\r\n\tif (period == undefined) {\r\n\t\treplaceAllChildren(subBox, []);\r\n\t\treturn;\r\n\t}\r\n\tlet buttons = [];\r\n\tlet i = 0;\r\n\tfor (let sub in period.intraschedule) {\r\n\t\tbuttons.push(createElement(\"button\", [\"class\", \"container hover\"], [\"text\", sub]));\r\n\t\tif (sub == period.intraindex) {\r\n\t\t\tbuttons[i].classList = \"container hover active\";\r\n\t\t}\r\n\t\tbuttons[i].onclick = function () {\r\n\t\t\tif (period.intraindex == sub) {\r\n\t\t\t\tperiod.intraindex = -1;\r\n\t\t\t\tthis.classList = \"container hover\";\r\n\t\t\t\tupdateScheduleDisplay(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tperiod.intraindex = sub;\r\n\t\t\tfor (let child of subBox.children) {\r\n\t\t\t\tif (child != this)\r\n\t\t\t\t\tchild.classList = \"container hover\";\r\n\t\t\t}\r\n\t\t\tindex_obj[index_obj.main_index] = 0;\r\n\t\t\tlet j = 0;\r\n\t\t\twhile (j < period.intraschedule[sub].length - 1 &&\r\n\t\t\t(period.intraschedule[sub][j].endTime - curTotalSec < 0)) {\r\n\t\t\t\tindex_obj[index_obj.main_index] = j + 1;\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\tthis.classList = \"container hover active\";\r\n\t\t\tupdateScheduleDisplay(false);\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\treplaceAllChildren(subBox, buttons);\r\n}\r\n\r\n/**\r\n * Calculates the amount of seconds left between the current time and the end of the period\r\n * @param {Object} period period object\r\n * @returns Integer distance between the times\r\n */\r\nfunction getTimeRemaining(period = null) {\r\n\tif (period != null) { //if provided an argument\r\n\t\treturn period.endTime - curTotalSec;\r\n\t} else { //use current period\r\n\t\tlet period = schedule.periods[index_obj.main_index];\r\n\t\tif (period === undefined) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (schedule.periods[index_obj.main_index].intraindex != -1) {\r\n\t\t\treturn (period.intraschedule[period.intraindex][index_obj[index_obj.main_index]].endTime - curTotalSec);\r\n\t\t} else {\r\n\t\t\treturn period.endTime - curTotalSec;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Advances the periods in the direction provided\r\n * @param {Integer} direction -1 or 1\r\n */\r\nfunction arrowAdvancePeriod(direction) {\r\n\tlet skip = false;\r\n\tconsole.log(\"a\")\r\n\tif (direction > 0) {\r\n\t\tif (index_obj.main_index >= schedule.periods.length - 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (index_obj.main_index == -1) {\r\n\t\t\tindex_obj.main_index = 0;\r\n\t\t\tskip = true;\r\n\t\t}\r\n\t} else if (direction < 0) {\r\n\t\tif (index_obj.main_index <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (index_obj.main_index == schedule.periods.length) {\r\n\t\t\tindex_obj.main_index = schedule.periods.length - 1;\r\n\t\t\tskip = true;\r\n\t\t}\r\n\t}\r\n\tlet period = schedule.periods[index_obj.main_index];\r\n\tperiodBox.children[2].children[index_obj.main_index].classList = \"gallery-dot\";\r\n\tif (!skip) {\r\n\t\tif (period.intraindex !== -1 &&\r\n\t\t\t(index_obj[index_obj.main_index] + direction < period.intraschedule[period.intraindex].length) &&\r\n\t\t\t(index_obj[index_obj.main_index] + direction >= 0)) {\r\n\t\t\t//If within a sub period and we don't advance to the next main period\r\n\t\t\tindex_obj[index_obj.main_index] += direction;\r\n\t\t\tperiod = period.intraschedule[period.intraindex][index_obj[index_obj.main_index]];\r\n\t\t} else { //advancing the next main period\r\n\t\t\tindex_obj.main_index += direction;\r\n\t\t}\r\n\t}\r\n\tperiodBox.children[2].children[index_obj.main_index].classList = \"gallery-dot active\";\r\n\tupdateScheduleDisplay((index_obj.main_index == schedule.periods.length || index_obj.main_index == -1));\r\n\tupdateTimer(getTimeRemaining(), (index_obj.main_index == schedule.periods.length || index_obj.main_index == -1), period);\r\n\tdisplaySubPeriodOptions(schedule.periods[index_obj.main_index]);\r\n}\r\n\r\n/**\r\n * Check if a given object has no properties\r\n * @param {Object} object\r\n * @returns boolean true if the object has no properties\r\n */\r\nfunction isEmpty(object) {\r\n\tfor (let i in object) {\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Converts 24 hour to 12 hour time\r\n * @param {String} time time in HH:MM form\r\n * @returns String time in HH:MM form\r\n */\r\nfunction to12HTime(time) {\r\n\ttime = time.split(\":\");\r\n\tlet digit = parseInt(time[0]);\r\n\ttime[0] = (digit > 12) ? padDigit(digit % 12) : padDigit(digit);\r\n\treturn time.join(\":\");\r\n}\r\n\r\nfunction padDigit(number) {\r\n\tif (number < 10) {\r\n\t\treturn `0${number}`\r\n\t} else {\r\n\t\treturn number;\r\n\t}\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", init);"]}